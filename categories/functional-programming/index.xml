<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Functional-Programming on Just another blog with random, unripenend thoughts. </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://localhost:1313/categories/functional-programming/index.xml/</link>
    <language>en-us</language>
    
    
    <updated>Sun, 21 Jul 2013 15:03:58 BST</updated>
    
    <item>
      <title>Functional javascript using underscore</title>
      <link>http://localhost:1313/post/functional-javascript-using-underscore/</link>
      <pubDate>Sun, 21 Jul 2013 15:03:58 BST</pubDate>
      
      <guid>http://localhost:1313/post/functional-javascript-using-underscore/</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;Functional javascript using underscore&lt;/h2&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;Why?&lt;/h3&gt;

&lt;p&gt;A little while ago I picked up &lt;a href=&#34;http://www.amazon.com/gp/product/B00D624AQO/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B00D624AQO&amp;amp;linkCode=as2&amp;amp;tag=secretdeveloper-20&#34;&gt;Functional Javascript&lt;/a&gt; by Michael Fogus.  I&amp;rsquo;m only part way through it and to be honest I should probably have waited until I finished it before starting this post but&amp;hellip;&lt;/p&gt;

&lt;p&gt;There is a central theme to this book which intrigued me, indeed its one of the main tenets of functional programming.  It can be summed up in this quote:
&amp;gt;&amp;ldquo;It is better to have 100 functions operate on one data structure than 10 functions on 10 data structures.&amp;rdquo; - Alan Perlis&lt;/p&gt;

&lt;p&gt;This is very different concept to what is normally seen in large enterprise level projects and applications.  I have to say that I have spent a large amount of time writing code to map one model to another and back again. Its not fun. This functional stuff might be on to something.&lt;/p&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;What?&lt;/h3&gt;

&lt;p&gt;Well Michaels book uses the &lt;a href=&#34;http://underscorejs.org&#34;&gt;underscore&lt;/a&gt; library for all of his examples and its a really powerful tool.  I have started using it here and there on smaller projects and the more I use it the more I like it.&lt;/p&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;How?&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://http://projecteuler.net/&#34;&gt;Project Euler&lt;/a&gt; is probably the go-to set of problems when developers try to learn a new language or framework.  I don&amp;rsquo;t see why I should be any different.  I have started a small project to play around with this and you can see it over on &lt;a href=&#34;https://github.com/SecretDeveloper/sdjs&#34;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;toc_4&#34;&gt;Problem 1&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23. Find the sum of all the multiples of 3 or 5 below 1000.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Can be solved with a few lines of code like the following:
&lt;code&gt;
    return _.reduce(_.range(0,1000), function(memo, number){  
            if( number%3===0 || number%5==0) return memo+number;  
            return memo;}  
        );  
&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&#34;toc_5&#34;&gt;Testing&lt;/h4&gt;

&lt;p&gt;Unit testing javascript has come a long way in the last few years and I have added a simple QUnit test runner to the repository.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>