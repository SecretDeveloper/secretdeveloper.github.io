<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Software - Category - SecretDeveloper</title>
        <link>http://localhost:1313/categories/software/</link>
        <description>Software - Category - SecretDeveloper</description>
        <generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 09 Aug 2025 12:00:00 &#43;0000</lastBuildDate><atom:link href="http://localhost:1313/categories/software/" rel="self" type="application/rss+xml" /><item>
    <title>Using gpt-oss-20b to Build Asteroids and Breakout</title>
    <link>http://localhost:1313/blog/2025-08-09-using-gpt-oss-20b-to-build-asteroids-and-breakout/</link>
    <pubDate>Sat, 09 Aug 2025 12:00:00 &#43;0000</pubDate><author>
        <name>Gary Kenneally</name>
    </author><guid>http://localhost:1313/blog/2025-08-09-using-gpt-oss-20b-to-build-asteroids-and-breakout/</guid>
    <description><![CDATA[<p>In this post I explore how to use <strong>gpt-oss-20b</strong>, an open source 20-billion parameter language model, to prototype two classic browser games: Asteroids and Breakout. By iterating on prompts and refining the output, I generated working HTML5 Canvas implementations in around an hour or so.</p>
<h4 id="about-gpt-oss-20b" class="headerLink">
    <a href="#about-gpt-oss-20b" class="header-mark"></a>About gpt-oss-20b</h4><p>gpt-oss-20b is an open-source 20-billion parameter transformer-based language model released by OpenAI under the Apache 2.0 license. It is based on the GPT-4 architecture scaled to 20B parameters, trained on a diverse mix of web text, code, and documents.</p>]]></description>
</item><item>
    <title>Software Architecture</title>
    <link>http://localhost:1313/blog/2018-10-05-software-architecture/</link>
    <pubDate>Fri, 05 Oct 2018 15:01:32 &#43;0100</pubDate><author>
        <name>Gary Kenneally</name>
    </author><guid>http://localhost:1313/blog/2018-10-05-software-architecture/</guid>
    <description><![CDATA[<h1 id="what-is-software-architecture" class="headerLink">
    <a href="#what-is-software-architecture" class="header-mark"></a>What is software architecture?</h1><p>It depends. Everyone in IT asks this question at some point and the answer they get is a mixed bag depending on who tries to answer it. So to deepen the general state of confusion I thought I would add yet another definition.</p>
<h2 id="what-is-a-software-architect" class="headerLink">
    <a href="#what-is-a-software-architect" class="header-mark"></a>What IS a Software Architect?</h2><p>It depends.
I think of Software architects as “Master builders”. They may not have the title &ldquo;Architect&rdquo; but they are doing most of the following:</p>]]></description>
</item><item>
    <title>Software, Estimation and the Planning Fallacy</title>
    <link>http://localhost:1313/blog/2016-10-14-software-estimation-and-the-planning-fallacy/</link>
    <pubDate>Fri, 14 Oct 2016 12:54:47 &#43;0000</pubDate><author>
        <name>Gary Kenneally</name>
    </author><guid>http://localhost:1313/blog/2016-10-14-software-estimation-and-the-planning-fallacy/</guid>
    <description><![CDATA[<p>My flight is delayed for 3 hours so I&rsquo;m taking the rare opportunity to put together some thoughts on how software project estimation can trip companies, teams and individuals up.</p>
<h2 id="waterfall" class="headerLink">
    <a href="#waterfall" class="header-mark"></a>Waterfall</h2><p>Remember way back when everyone thought the Waterfall model was great?  Well actually no, for the most part they didnt. The Waterfall model was put forward by Winston Royce back in the early 70&rsquo;s as an example of a <em>broken</em> SDLC model.  Unfortunately this little note was lost in the scramble to adopt it as the de-facto model to use.  Now what is interesting to me is its original creator could see that the waterall model contained flaws, but thousands  of people could either not see those same flaws, or were unable to cease its adoption even if they tried; I&rsquo;m not sure which of those is worse.  30 years later you would be hard pressed to find any organizations still working under a Waterfall model, which is good.  The real problem however is not that a mistake was made, its that it took a generation before we acknowledged there was a problem.</p>]]></description>
</item></channel>
</rss>
